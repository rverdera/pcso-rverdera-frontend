@page "/todo"
@inject IJSRuntime JS
@using System.Text.Json;
@using System.Text.Json.Serialization;
@using System.Net.Http.Headers

@if (todoList != null)
{
    @foreach (var todo in todoList)
    {
        <MudCard>           
            <MudImage Fluid="true" Src="images/satya.jfif" Alt="Swedish Farm House" Class="rounded-lg"/>
            <MudCardContent>
                <MudText Typo="Typo.h5" Color="Color.Primary">@todo.name</MudText>
                <MudText Typo="Typo.body1">@todo.message</MudText>
                <MudText Typo="Typo.body2">@todo.created</MudText>
            </MudCardContent>
        </MudCard>
        <br />
    }
}

<MudTextField @bind-Value="name" Label="Name" Variant="Variant.Outlined"></MudTextField>
<MudTextField @bind-Value="message" Label="Message" Variant="Variant.Outlined"></MudTextField>

<br>

<MudButton Variant="Variant.Filled"
           EndIcon="@Icons.Material.Filled.Send"
           OnClick="AddToDo"
           Color="Color.Primary">Add</MudButton>

<MudButton Variant="Variant.Filled"
           EndIcon="@Icons.Material.Filled.Send"
           OnClick="InvokeJavaScript"
           Color="Color.Primary">Update App</MudButton>

<MudButton Variant="Variant.Filled"
           EndIcon="@Icons.Material.Filled.Send"
           OnClick="DeleteAll"
           Color="Color.Error">Delete List</MudButton>

@code {
    private int count = 0;
    private string jsonData;
    private List<ToDoItem> todoList;

    private string name;
    private string message;

    protected async override Task OnInitializedAsync()
    {
        await GetListAsync();
        base.OnInitializedAsync();
    }

    private async void DeleteAll()
    {
        HttpClient httpClient = new HttpClient();
        await httpClient.DeleteAsync("https://localhost:7130/todoitems");
        await GetListAsync();
        StateHasChanged();
    }

    private async void AddToDo()
    {
        // Now we want to use our Web API
        count++;
        HttpClient httpClient = new HttpClient();

        ToDoItem todoItemPost = new ToDoItem
            {
                message = message,
                name = name
            };
        string myContent = JsonSerializer.Serialize(todoItemPost);
        byte[] buffer = System.Text.Encoding.UTF8.GetBytes(myContent);
        ByteArrayContent byteContent = new ByteArrayContent(buffer);
        byteContent.Headers.ContentType = new MediaTypeHeaderValue("application/json");
        await httpClient.PostAsync("https://localhost:7130/todoitems", byteContent);

        await GetListAsync();

        StateHasChanged();
    }

    private async Task GetListAsync()
    {
        HttpClient httpClient = new HttpClient();

        //jsonData = await httpClient.GetStringAsync("https://pcso-rverdera-backend.azurewebsites.net/todoitems");
        jsonData = await httpClient.GetStringAsync("https://localhost:7130/todoitems");

        todoList = JsonSerializer.Deserialize<List<ToDoItem>>(jsonData);
        message = null;
    }

    private async void InvokeJavaScript()
    {
        await JS.InvokeVoidAsync("DeleteCache");
        await JS.InvokeVoidAsync("HelloAlert");
    }

    public class ToDoItem
    {
        public int id { get; set; }
        public string name { get; set; }
        public bool isComplete { get; set; }
        public string message { get; set; }
        public DateTime created { get; set; }
    }
}